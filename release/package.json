{
	"name": "Ionide-fsharp",
	"version": "3.23.0",
	"publisher": "Ionide",
	"contributors": [
		{
			"name": "Krzysztof Cie≈õlak",
			"url": "https://twitter.com/k_cieslak"
		}
	],
	"description": "F# Language Support",
	"categories": [
		"Linters",
		"Programming Languages",
		"Snippets"
	],
	"license": "SEE LICENSE IN LICENSE.md",
	"icon": "images/logo.png",
	"bugs": {
		"url": "https://github.com/ionide/ionide-vscode-fsharp/issues"
	},
	"homepage": "http://ionide.io",
	"repository": {
		"type": "git",
		"url": "https://github.com/ionide/ionide-vscode-fsharp.git"
	},
	"engines": {
		"vscode": "^0.10.0"
	},
	"main": "./fsharp",
	"contributes": {
		"languages": [
			{
				"id": "fsharp",
				"aliases": [
					"F#",
					"FSharp",
					"fsharp"
				],
				"extensions": [
					".fs",
					".fsx",
					".fsi"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "fsharp",
				"scopeName": "source.fsharp",
				"path": "./syntaxes/fsharp.json"
			},
			{
				"language": "fsharp",
				"scopeName": "source.fsharp.fsx",
				"path": "./syntaxes/fsharp.fsx.json"
			},
			{
				"language": "fsharp",
				"scopeName": "source.fsharp.fsi",
				"path": "./syntaxes/fsharp.fsi.json"
			},
			{
				"language": "fsharp",
				"scopeName": "source.fsharp.fsl",
				"path": "./syntaxes/fsharp.fsl.json"
			}
		],
		"commands": [
			{
				"command": "fsi.Start",
				"title": "FSI: Start"
			},
			{
				"command": "fsi.SendLine",
				"title": "FSI: Send Line"
			},
			{
				"command": "fsi.SendSelection",
				"title": "FSI: Send Selection"
			},
			{
				"command": "fsi.SendLastSelection",
				"title": "FSI: Send Last Selection"
			},
			{
				"command": "fsi.SendFile",
				"title": "FSI: Send File",
				"icon": {
					"light": "./images/send-light.svg",
					"dark": "./images/send-dark.svg"
				}
			},
			{
				"command": "fsi.SendProjectReferences",
				"title": "FSI: Send References from project"
			},
			{
				"command": "fsi.GenerateProjectReferences",
				"title": "FSI: Generate script file with references from project"
			},
			{
				"command": "fsharp.scriptrunner.run",
				"title": "F#: Run script",
				"icon": {
					"light": "./images/run-light.svg",
					"dark": "./images/run-dark.svg"
				}
			},
			{
				"command": "fsharp.MoveFileUp",
				"title": "F#: Move File Up"
			},
			{
				"command": "fsharp.MoveFileDown",
				"title": "F#: Move File Down"
			},
			{
				"command": "fsharp.NewProject",
				"title": "F#: New Project",
				"icon": {
					"light": "./images/add-light.svg",
					"dark": "./images/add-dark.svg"
				}
			},
			{
				"command": "ionide.codeOutline.collapseAll",
				"title": "Collapse all",
				"icon": {
					"light": "./images/collapse-all-light.svg",
					"dark": "./images/collapse-all-dark.svg"
				}
			},
			{
				"command": "ionide.codeOutline.expandAll",
				"title": "Expand all",
				"icon": {
					"light": "./images/expand-all-light.svg",
					"dark": "./images/expand-all-dark.svg"
				}
			},
			{
				"command": "ionide.codeOutline.collapseDefault",
				"title": "Collapse to default state",
				"icon": {
					"light": "./images/refresh-light.svg",
					"dark": "./images/refresh-dark.svg"
				}
			},
			{
				"command": "fsharp.NewProjectNoFake",
				"title": "F#: New Project (Without FAKE)",
				"icon": {
					"light": "./images/add-light.svg",
					"dark": "./images/add-dark.svg"
				}
			},
			{
				"command": "fsharp.NewProjectScaffold",
				"title": "F#: New Project (ProjectScaffold)"
			},
			{
				"command": "fsharp.RefreshProjectTemplates",
				"title": "F#: Refresh Project Templates"
			},
			{
				"command": "fsharp.AddFileToProject",
				"title": "F#: Add Current File To Project"
			},
			{
				"command": "fsharp.RemoveFileFromProject",
				"title": "F#: Remove Current File From Project"
			},
			{
				"command": "fsharp.AddProjectReference",
				"title": "F#: Add Project Reference"
			},
			{
				"command": "fsharp.RemoveProjectReference",
				"title": "F#: Remove Project Reference"
			},
			{
				"command": "fsharp.AddReference",
				"title": "F#: Add Reference"
			},
			{
				"command": "fsharp.RemoveReference",
				"title": "F#: Remove Reference"
			},
			{
				"command": "fsharp.getHelp",
				"title": "F#: Get Help"
			},
			{
				"command": "fsharp.generateDoc",
				"title": "F#: Generate Documentation"
			},
			{
				"command": "fsharp.clearCache",
				"title": "F#: Clear Cache"
			},
			{
				"command": "fsharp.changeWorkspace",
				"title": "F#: Change Workspace or Solution"
			},
			{
				"command": "MSBuild.buildCurrent",
				"title": "MSBuild: Build current project"
			},
			{
				"command": "MSBuild.buildSelected",
				"title": "MSBuild: Build project"
			},
			{
				"command": "MSBuild.rebuildCurrent",
				"title": "MSBuild: Rebuild current project"
			},
			{
				"command": "MSBuild.rebuildSelected",
				"title": "MSBuild: Rebuild project"
			},
			{
				"command": "MSBuild.cleanCurrent",
				"title": "MSBuild: Clean current project"
			},
			{
				"command": "MSBuild.cleanSelected",
				"title": "MSBuild: Clean project"
			},
			{
				"command": "MSBuild.restoreSelected",
				"title": "MSBuild: Restore project"
			},
			{
				"command": "MSBuild.switchMSbuildHostType",
				"title": "MSBuild: Switch host type"
			},
			{
				"command": "MSBuild.buildCurrentSolution",
				"title": "MSBuild: Build current solution"
			},
			{
				"command": "MSBuild.rebuildCurrentSolution",
				"title": "MSBuild: Rebuild current solution"
			},
			{
				"command": "MSBuild.cleanCurrentSolution",
				"title": "MSBuild: Clean current solution"
			},
			{
				"command": "fsharp.explorer.moveUp",
				"title": "Move file up",
				"icon": {
					"light": "./images/up-mono-light.svg",
					"dark": "./images/up-mono-dark.svg"
				}
			},
			{
				"command": "fsharp.explorer.moveDown",
				"title": "Move file down",
				"icon": {
					"light": "./images/down-mono-light.svg",
					"dark": "./images/down-mono-dark.svg"
				}
			},
			{
				"command": "fsharp.explorer.moveToFolder",
				"title": "Move file to folder"
			},
			{
				"command": "fsharp.explorer.removeFile",
				"title": "Remove file"
			},
			{
				"command": "fsharp.explorer.addAbove",
				"title": "Add file above"
			},
			{
				"command": "fsharp.explorer.addBelow",
				"title": "Add file below"
			},
			{
				"command": "fsharp.explorer.addFile",
				"title": "Add file"
			},
			{
				"command": "fsharp.explorer.showProjectLoadFailedInfo",
				"title": "Show info about failed project loading"
			},
			{
				"command": "fsharp.explorer.showProjectStatus",
				"title": "Show project status"
			},
			{
				"command": "fsharp.explorer.renameFile",
				"title": "Rename file"
			},
			{
				"command": "fsharp.explorer.addProjecRef",
				"title": "Add project reference"
			},
			{
				"command": "fsharp.explorer.removeProjecRef",
				"title": "Remove project reference"
			},
			{
				"command": "fsharp.explorer.openProjectFile",
				"title": "Open project file",
				"icon": {
					"light": "images/open-file-mono-light.svg",
					"dark": "images/open-file-mono-dark.svg"
				}
			},
			{
				"command": "fsharp.explorer.refresh",
				"title": "Refresh Explorer"
			},
			{
				"command": "fsharp.explorer.clearCache",
				"title": "Clear project cache"
			},
			{
				"command": "fsharp.diagnostics.toggle",
				"title": "Toggle diagnostics",
				"category": "F#"
			},
			{
				"command": "fsharp.diagnostics.getInfos",
				"title": "Get info for diagnostics",
				"category": "F#"
            },
			{
				"command": "fsharp.diagnostics.getIonideLogs",
				"title": "Get Ionide logs",
				"category": "F#"
			},
			{
				"command": "fsharp.explorer.msbuild.build",
				"title": "Build"
			},
			{
				"command": "fsharp.explorer.msbuild.rebuild",
				"title": "Rebuild"
			},
			{
				"command": "fsharp.explorer.msbuild.clean",
				"title": "Clean"
			},
			{
				"command": "fsharp.explorer.msbuild.restore",
				"title": "Restore"
			},
			{
				"command": "fsharp.explorer.solution.build",
				"title": "Build"
			},
			{
				"command": "fsharp.explorer.solution.rebuild",
				"title": "Rebuild"
			},
			{
				"command": "fsharp.explorer.solution.clean",
				"title": "Clean"
			},
			{
				"command": "fsharp.explorer.solution.restore",
				"title": "Restore"
			},
			{
				"command": "fsharp.explorer.project.run",
				"title": "Run",
				"icon": {
					"light": "./images/run-mono-light.svg",
					"dark": "./images/run-mono-dark.svg"
				}
			},
			{
				"command": "fsharp.explorer.project.debug",
				"title": "Debug",
				"icon": {
					"light": "./images/debug-mono-light.svg",
					"dark": "./images/debug-mono-dark.svg"
				}
			},
			{
				"command": "fsharp.explorer.project.setDefault",
				"title": "Set as startup project"
			},
			{
				"command": "fsharp.explorer.project.sendFSI",
				"title": "Send references for FSI"
			},
			{
				"command": "fsharp.explorer.project.generateFSI",
				"title": "Generate references for FSI"
			},
			{
				"command": "fsharp.explorer.msbuild.pickHost",
				"title": "F#: Pick MsBuild Host"
			},
			{
				"command": "fsharp.runDefaultProject",
				"title": "F#: Run Default Project",
				"icon": "./images/run.png"
			},
			{
				"command": "fsharp.debugDefaultProject",
				"title": "F#: Debug Default Project",
				"icon": "./images/debug.png"
			},
			{
				"command": "fsharp.chooseDefaultProject",
				"title": "F#: Choose Default Project"
			},
			{
				"command": "fsharp.explorer.solution.addProject",
				"title": "Add project"
			},
			{
				"command": "fsharp.htmlConverter.convert",
				"title": "Convert html to Elmish",
				"description": "Converts your selection to Elmish by assuming that your selection is HTML code",
				"category": "F#"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "ionide-fsharp",
					"title": "F#",
					"icon": "images/activity-fsharp-logo.svg",
					"when": "fsharp.showProjectExplorerInFsharpActivity"
				}
			]
		},
		"views": {
			"explorer": [
				{
					"id": "ionide.projectExplorer",
					"name": "F# Project Explorer",
					"when": "fsharp.project.any && fsharp.showProjectExplorerInExplorerActivity"
				},
				{
					"id": "ionide.codeOutline",
					"name": "F# Code Outline",
					"when": "fsharp.showCodeOutline && fsharp.showCodeOutlineInExplorerActivity"
				}
			],
			"ionide-fsharp": [
				{
					"id": "ionide.projectExplorerInActivity",
					"name": "Project Explorer",
					"when": "fsharp.project.any && fsharp.showProjectExplorerInFsharpActivity"
				},
				{
					"id": "ionide.codeOutlineInActivity",
					"name": "Code Outline",
					"when": "fsharp.showCodeOutline && fsharp.showCodeOutlineInFsharpActivity"
				}
			]
		},
		"menus": {
			"commandPalette": [
				{
					"command": "fsharp.explorer.moveUp",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.moveDown",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.removeFile",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.renameFile",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.moveToFolder",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.addAbove",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.addBelow",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.addFile",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.addProjecRef",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.removeProjecRef",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.refresh",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.clearCache",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.msbuild.build",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.msbuild.rebuild",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.msbuild.clean",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.msbuild.restore",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.solution.build",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.solution.rebuild",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.solution.clean",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.solution.restore",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.msbuild.pickHost",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.project.run",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.project.debug",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.project.setDefault",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.project.sendFSI",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.project.generateFSI",
					"when": "false"
				},
				{
					"command": "fsharp.explorer.solution.addProject",
					"when": "false"
				},
				{
					"command": "ionide.codeOutline.collapseAll",
					"when": "false"
				},
				{
					"command": "ionide.codeOutline.expandAll",
					"when": "false"
				},
				{
					"command": "ionide.codeOutline.collapseDefault",
					"when": "false"
				},
				{
					"command": "fsi.SendLine",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "fsi.SendSelection",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "fsi.SendLastSelection",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "fsi.SendFile",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "fsi.SendProjectReferences",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "fsi.GenerateProjectReferences",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "fsharp.scriptrunner.run",
					"when": "editorLangId == 'fsharp' && resourceExtname == '.fsx'"
				},
				{
					"command": "fsharp.MoveFileUp",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "fsharp.MoveFileDown",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "fsharp.AddFileToProject",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "fsharp.RemoveFileFromProject",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "fsharp.getHelp",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "fsharp.generateDoc",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "MSBuild.buildCurrent",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "MSBuild.rebuildCurrent",
					"when": "editorLangId == 'fsharp'"
				},
				{
					"command": "MSBuild.cleanCurrent",
					"when": "editorLangId == 'fsharp'"
				}
			],
			"view/title": [
				{
					"command": "fsharp.NewProject",
					"group": "navigation@1",
					"alt": "fsharp.NewProjectNoFake",
					"when": "view == ionide.projectExplorer"
				},
				{
					"command": "fsharp.NewProject",
					"group": "navigation@1",
					"alt": "fsharp.NewProjectNoFake",
					"when": "view == ionide.projectExplorerInActivity"
				},
				{
					"command": "fsharp.debugDefaultProject",
					"group": "navigation@2",
					"alt": "fsharp.runDefaultProject",
					"when": "view == ionide.projectExplorer"
				},
				{
					"command": "fsharp.debugDefaultProject",
					"group": "navigation@2",
					"alt": "fsharp.runDefaultProject",
					"when": "view == ionide.projectExplorerInActivity"
				},
				{
					"command": "fsharp.changeWorkspace",
					"group": "modification@1",
					"when": "view == ionide.projectExplorer"
				},
				{
					"command": "fsharp.changeWorkspace",
					"group": "modification@1",
					"when": "view == ionide.projectExplorerInActivity"
				},
				{
					"command": "fsharp.explorer.msbuild.pickHost",
					"group": "modification@2",
					"when": "view == ionide.projectExplorer"
				},
				{
					"command": "fsharp.explorer.msbuild.pickHost",
					"group": "modification@2",
					"when": "view == ionide.projectExplorerInActivity"
				},
				{
					"command": "fsharp.chooseDefaultProject",
					"group": "modification@3",
					"when": "view == ionide.projectExplorer"
				},
				{
					"command": "fsharp.chooseDefaultProject",
					"group": "modification@3",
					"when": "view == ionide.projectExplorerInActivity"
				},
				{
					"command": "fsharp.explorer.refresh",
					"group": "modification@4",
					"when": "view == ionide.projectExplorer"
				},
				{
					"command": "fsharp.explorer.refresh",
					"group": "modification@4",
					"when": "view == ionide.projectExplorerInActivity"
				},
				{
					"command": "fsharp.explorer.clearCache",
					"group": "modification@5",
					"when": "view == ionide.projectExplorer"
				},
				{
					"command": "fsharp.explorer.clearCache",
					"group": "modification@5",
					"when": "view == ionide.projectExplorerInActivity"
				},
				{
					"command": "ionide.codeOutline.collapseDefault",
					"group": "navigation@1",
					"when": "view == ionide.codeOutline"
				},
				{
					"command": "ionide.codeOutline.collapseDefault",
					"group": "navigation@1",
					"when": "view == ionide.codeOutlineInActivity"
				},
				{
					"command": "ionide.codeOutline.collapseAll",
					"alt": "ionide.codeOutline.expandAll",
					"group": "navigation@2",
					"when": "view == ionide.codeOutline"
				},
				{
					"command": "ionide.codeOutline.collapseAll",
					"alt": "ionide.codeOutline.expandAll",
					"group": "navigation@2",
					"when": "view == ionide.codeOutlineInActivity"
				}
			],
			"view/item/context": [
				{
					"command": "fsharp.explorer.moveUp",
					"when": "viewItem == ionide.projectExplorer.file",
					"group": "1_navigation@1"
				},
				{
					"command": "fsharp.explorer.moveUp",
					"when": "viewItem == ionide.projectExplorer.file",
					"group": "inline@1"
				},
				{
					"command": "fsharp.explorer.moveDown",
					"when": "viewItem == ionide.projectExplorer.file",
					"group": "1_navigation@2"
				},
				{
					"command": "fsharp.explorer.moveDown",
					"when": "viewItem == ionide.projectExplorer.file",
					"group": "inline@2"
				},
				{
					"command": "fsharp.explorer.moveToFolder",
					"when": "viewItem == ionide.projectExplorer.file",
					"group": "1_navigation@3"
				},
				{
					"command": "fsharp.explorer.removeFile",
					"when": "viewItem == ionide.projectExplorer.file",
					"group": "1_navigation@4"
				},
				{
					"command": "fsharp.explorer.renameFile",
					"when": "viewItem == ionide.projectExplorer.file",
					"group": "2_modification@1"
				},
				{
					"command": "fsharp.explorer.addAbove",
					"when": "viewItem == ionide.projectExplorer.file",
					"group": "3_add@1"
				},
				{
					"command": "fsharp.explorer.addBelow",
					"when": "viewItem == ionide.projectExplorer.file",
					"group": "3_add@2"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.projectNotLoaded"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.projectNotLoaded",
					"group": "inline@99"
				},
				{
					"command": "fsharp.explorer.showProjectLoadFailedInfo",
					"when": "viewItem == ionide.projectExplorer.projectLoadFailed"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.projectLoadFailed"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.projectLoadFailed",
					"group": "inline@99"
				},
				{
					"command": "fsharp.explorer.showProjectStatus",
					"when": "viewItem == ionide.projectExplorer.projectLoading"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.projectLoading"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.projectNotRestored"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.projectLoading",
					"group": "inline@99"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.projectNotRestored",
          			"group": "inline@99"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.projectNotRestored",
					"group": "inline@99"
				},
				{
					"command": "fsharp.explorer.showProjectStatus",
					"when": "viewItem == ionide.projectExplorer.projectNotRestored"
				},
				{
					"command": "fsharp.explorer.addProjecRef",
					"when": "viewItem == ionide.projectExplorer.projectRefList"
				},
				{
					"command": "fsharp.explorer.removeProjecRef",
					"when": "viewItem == ionide.projectExplorer.projRef"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.project",
					"group": "4_derails@1"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.project",
					"group": "inline@99"
				},
				{
					"command": "fsharp.explorer.showProjectStatus",
					"when": "viewItem == ionide.projectExplorer.project",
					"group": "4_details@2"
				},
				{
					"command": "fsharp.explorer.addFile",
					"when": "viewItem == ionide.projectExplorer.project",
					"group": "2_modifications@2"
				},
				{
					"command": "fsharp.explorer.project.generateFSI",
					"when": "viewItem == ionide.projectExplorer.project",
					"group": "3_fsi@1"
				},
				{
					"command": "fsharp.explorer.project.sendFSI",
					"when": "viewItem == ionide.projectExplorer.project",
					"group": "3_fsi@2"
				},
				{
					"command": "fsharp.explorer.msbuild.build",
					"when": "viewItem == ionide.projectExplorer.project",
					"group": "1_navigation@1"
				},
				{
					"command": "fsharp.explorer.msbuild.rebuild",
					"when": "viewItem == ionide.projectExplorer.project",
					"group": "1_navigation@2"
				},
				{
					"command": "fsharp.explorer.msbuild.clean",
					"when": "viewItem == ionide.projectExplorer.project",
					"group": "1_navigation@3"
				},
				{
					"command": "fsharp.explorer.msbuild.restore",
					"when": "viewItem == ionide.projectExplorer.project",
					"group": "1_navigation@4"
				},
				{
					"command": "fsharp.explorer.msbuild.restore",
					"when": "viewItem == ionide.projectExplorer.projectNotRestored",
					"group": "1_navigation@1"
				},
				{
					"command": "fsharp.explorer.solution.build",
					"when": "viewItem == ionide.projectExplorer.solution",
					"group": "1_navigation@1"
				},
				{
					"command": "fsharp.explorer.solution.rebuild",
					"when": "viewItem == ionide.projectExplorer.solution",
					"group": "1_navigation@2"
				},
				{
					"command": "fsharp.explorer.solution.clean",
					"when": "viewItem == ionide.projectExplorer.solution",
					"group": "1_navigation@3"
				},
				{
					"command": "fsharp.explorer.solution.restore",
					"when": "viewItem == ionide.projectExplorer.solution",
					"group": "1_navigation@3"
				},
				{
					"command": "fsharp.explorer.solution.addProject",
					"when": "viewItem == ionide.projectExplorer.solution",
					"group": "2_modification@1"
				},
				{
					"command": "fsharp.explorer.addFile",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "3_modifications@2"
				},
				{
					"command": "fsharp.explorer.project.generateFSI",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "4_fsi@1"
				},
				{
					"command": "fsharp.explorer.project.sendFSI",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "4_fsi@2"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "5_detail@1"
				},
				{
					"command": "fsharp.explorer.openProjectFile",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "inline@99"
				},
				{
					"command": "fsharp.explorer.showProjectStatus",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "5_detail@2"
				},
				{
					"command": "fsharp.explorer.msbuild.build",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "2_navigation@1"
				},
				{
					"command": "fsharp.explorer.msbuild.rebuild",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "2_navigation@2"
				},
				{
					"command": "fsharp.explorer.msbuild.clean",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "2_navigation@3"
				},
				{
					"command": "fsharp.explorer.msbuild.restore",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "2_navigation@4"
				},
				{
					"command": "fsharp.explorer.project.run",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "1_run@1"
				},
				{
					"command": "fsharp.explorer.project.run",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "inline@1"
				},
				{
					"command": "fsharp.explorer.project.debug",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "1_run@2"
				},
				{
					"command": "fsharp.explorer.project.debug",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "inline@2"
				},
				{
					"command": "fsharp.explorer.project.setDefault",
					"when": "viewItem == ionide.projectExplorer.projectExe",
					"group": "1_run@3"
				}
			],
			"editor/context": [
				{
					"command": "fsharp.generateDoc",
					"group": "1_modification",
					"when": "editorTextFocus && editorLangId == 'fsharp'"
				}
			],
			"editor/title": [
				{
					"command": "fsi.SendFile",
					"when": "editorLangId == 'fsharp' && resourceExtname == '.fsx'",
					"group": "navigation"
				},
				{
					"command": "fsharp.scriptrunner.run",
					"when": "editorLangId == 'fsharp' && resourceExtname == '.fsx'",
					"group": "navigation"
				}
			],
			"touchBar": [
				{
					"command": "fsharp.debugDefaultProject",
					"group": "fsharp",
					"when": "fsharp.project.any"
				},
				{
					"command": "fsharp.runDefaultProject",
					"group": "fsharp",
					"when": "fsharp.project.any"
				},
				{
					"command": "fsharp.NewProject",
					"group": "fsharp",
					"when": "fsharp.project.any"
				},
				{
					"command": "fsi.Start",
					"group": "fsharp",
					"when": "fsharp.project.any || editorLangId == 'fsharp'"
				},
				{
					"command": "fsi.SendFile",
					"group": "fsharp",
					"when": "editorLangId == 'fsharp'"
				}
			]
		},
		"outputChannels": [
			"F# Language Service",
			"F# Interactive",
			"Forge",
			"MSBuild"
		],
		"keybindings": [
			{
				"command": "fsi.SendLine",
				"key": "alt+/",
				"mac": "alt+/",
				"when": "editorFocus && !findWidgetVisible && editorLangId == 'fsharp'"
			},
			{
				"command": "fsi.SendSelection",
				"key": "alt+Enter",
				"mac": "alt+Enter",
				"when": "editorFocus && !findWidgetVisible && editorLangId == 'fsharp'"
			},
			{
				"command": "fsharp.MoveFileUp",
				"key": "ctrl+shift+up",
				"when": "editorFocus  && editorLangId == 'fsharp'"
			},
			{
				"command": "fsharp.MoveFileDown",
				"key": "ctrl+shift+down",
				"when": "editorFocus && editorLangId == 'fsharp'"
			},
			{
				"command": "fsharp.generateDoc",
				"key": "alt+shift+j",
				"when": "editorFocus && editorLangId == 'fsharp'"
			},
			{
				"command": "fsharp.getHelp",
				"key": "shift+F1",
				"when": "editorFocus && editorLangId == 'fsharp'"
			},
			{
				"command": "MSBuild.buildCurrent",
				"key": "ctrl+alt+b",
				"when": "editorFocus && editorLangId == 'fsharp'"
			},
			{
				"command": "MSBuild.buildCurrentSolution",
				"key": "ctrl+alt+shift+b",
				"when": "fsharp.project.any"
			}
		],
		"configurationDefaults": {
			"[fsharp]": {
				"editor.useTabStops": false
			}
		},
		"configuration": {
			"type": "object",
			"title": "FSharp configuration",
			"properties": {
				"FSharp.fsacRuntime": {
					"type": "string",
					"default": "net",
					"description": "Choose the runtime of FsAutocomplete (FSAC). Require restart",
					"enum": [
						"net",
						"netcore"
					]
				},
				"FSharp.workspaceMode": {
					"type": "string",
					"default": "sln",
					"description": "Choose the workspace mode",
					"enum": [
						"sln",
						"directory",
						"ionideSearch"
					]
				},
				"FSharp.workspaceLoader": {
					"type": "string",
					"default": "workspaceLoad",
					"description": "Choose the FSAC workspace loader",
					"enum": [
						"projects",
						"workspaceLoad"
					]
				},
				"FSharp.workspaceModePeekDeepLevel": {
					"type": "integer",
					"default": 2,
					"description": "The deep level of directory hierarchy when searching for sln/projects"
				},
				"FSharp.logLanguageServiceRequests": {
					"type": "string",
					"default": "output",
					"description": "Enable logging for F# Language Service requests (FSAC) to either an output channel, the developer tools console, or both",
					"enum": [
						"none",
						"output",
						"devconsole",
						"both"
					]
				},
				"FSharp.logLanguageServiceRequestsOutputWindowLevel": {
					"type": "string",
					"default": "INFO",
					"description": "Set the verbosity for F# Language Service Output Channel",
					"enum": [
						"DEBUG",
						"INFO",
						"WARN",
						"ERROR"
					]
				},
				"FSharp.toolsDirPath": {
					"type": "string",
					"default": "",
					"description": "The directory containing the F# tools"
				},
				"FSharp.monoPath": {
					"type": "string",
					"default": "mono",
					"description": "The path to Mono executable"
				},
				"FSharp.fsiFilePath": {
					"type": "string",
					"default": "",
					"description": "The path to the F# Interactive tool used by Ionide-FSharp"
				},
				"FSharp.keywordsAutocomplete": {
					"type": "boolean",
					"default": true,
					"description": "Includes keywords in autocomplete"
				},
				"FSharp.externalAutocomplete": {
					"type": "boolean",
					"default": true,
					"description": "Includes external (from unopen modules and namespaces) symbols in autocomplete"
				},
				"FSharp.linter": {
					"type": "boolean",
					"default": true,
					"description": "Enables integration with FSharpLinter (additional warnings)"
				},
				"FSharp.unusedOpensAnalyzer": {
					"type": "boolean",
					"default": true,
					"description": "Enables detection of unused opens"
				},
				"FSharp.unusedDeclarationsAnalyzer": {
					"type": "boolean",
					"default": true,
					"description": "Enables detection of unused declarations"
				},
				"FSharp.simplifyNameAnalyzer": {
					"type": "boolean",
					"default": true,
					"description": "Enables detection of symbols usages that can be simplified"
				},
				"FSharp.fsiExtraParameters": {
					"type": "array",
					"default": [],
					"description": "Allows to pass extra parameters to FSI process"
				},
				"FSharp.saveOnSendLastSelection": {
					"type": "boolean",
					"default": false,
					"description": "Save Current file before send LastSelection to FSI"
				},
				"FSharp.msbuildLocation": {
					"type": "string",
					"default": "",
					"description": "Use a specific version of msbuild to build this project."
				},
				"FSharp.msbuildAutoshow": {
					"type": "boolean",
					"default": false,
					"description": "Automatically shows MsBuild output panel"
				},
				"FSharp.msbuildHost": {
					"type": "string",
					"default": "auto",
					"description": "MSBuild host",
					"enum": [
						".net",
						".net core",
						"ask at first use",
						"auto"
					]
				},
				"FSharp.resolveNamespaces": {
					"type": "boolean",
					"default": true,
					"description": "Enables `resolve unopened namespaces and modules` code fix. Not stable, can crash FSAC - use at your own risk."
				},
				"FSharp.enableTreeView": {
					"type": "boolean",
					"default": true,
					"description": "Enables project explorer."
				},
				"FSharp.excludeProjectDirectories": {
					"type": "array",
					"default": [
						".git",
						"paket-files"
					],
					"description": "Directories in the array are excluded from project file search. Requires restart"
				},
				"FSharp.lineLens.enabled": {
					"type": "string",
					"description": "Usage mode for LineLens",
					"enum": [
						"never",
						"replaceCodeLens",
						"always"
					],
					"default": "never"
				},
				"FSharp.lineLens.prefix": {
					"type": "string",
					"description": "The prefix displayed before the signature",
					"default": "  // "
				},
				"FSharp.codeOutline": {
					"type": "boolean",
					"default": true,
					"description": "Enables Code Outline tree view.",
					"scope": "resource"
				},
				"FSharp.minimizeBackgroundParsing": {
					"type": "boolean",
					"default": false,
					"description": "Minimize the amount of background type-checking of dependent projects. Requires restart.\nThis is a performance workaround that will increase intellisense responsiveness for projects that are referenced by many other projects in the solution."
				},
				"FSharp.showCodeOutlineIn": {
					"type":"string",
					"default": "fsharp",
					"description": "Set the activity (left bar) where the code outline view will be displayed.\nRequires restart.",
					"enum": [
						"explorer",
						"fsharp"
					],
					"scope": "application"
				},
				"FSharp.showProjectExplorerIn": {
					"type":"string",
					"default": "fsharp",
					"description": "Set the activity (left bar) where the project explorer view will be displayed.\nRequires restart.",
					"enum": [
						"explorer",
						"fsharp"
					],
					"scope": "application"
				}
			}
		},
		"jsonValidation": [
			{
				"fileMatch": "fableconfig.json",
				"url": "./schemas/fableconfig.json"
			},
			{
				"fileMatch": "wsconfig.json",
				"url": "./schemas/wsconfig.json"
			}
		],
		"breakpoints": [
			{
				"language": "fsharp"
			}
		],
		"problemMatchers": [
			{
				"name": "fable-webpack",
				"owner": "fsharp",
				"fileLocation": "absolute",
				"background": {
					"activeOnStart": true,
					"beginsPattern": {
						"regexp": "webpack: Compiling"
					},
					"endsPattern": {
						"regexp": "webpack: (Compiled successfully|Failed to compile)"
					}
				},
				"pattern": {
					"regexp": "(.*)\\((\\d+),(\\d+),(\\d+),(\\d+)\\)\\s*:\\s*(warning|error) FABLE\\s*:\\s*(.*)$",
					"file": 1,
					"line": 2,
					"column": 3,
					"endLine": 4,
					"endColumn": 5,
					"severity": 6,
					"message": 7
				}
			}
		],
		"colors": [
			{
				"id": "fsharp.linelens",
				"description": "Foreground color for F# LineLenses",
				"defaults": {
					"dark": "#525252",
					"light": "#C2C2C2",
					"highContrast": "#A2E2A2"
				}
			}
		]
	},
	"activationEvents": [
		"workspaceContains:**/*.fs",
		"workspaceContains:**/*.fsx",
		"workspaceContains:**/*.fsproj",
		"workspaceContains:**/*.sln",
		"onLanguage:fsharp",
		"onCommand:fsi.Start",
		"onCommand:fsharp.NewProject",
		"onCommand:fsharp.NewProjectNoFake",
		"onCommand:fsharp.NewProjectScaffold",
		"onCommand:fsharp.RefreshProjectTemplates"
	],
	"extensionDependencies": [
		"vscode.fsharp"
	],
	"__metadata": {
		"id": "0ea05e3f-5a38-419d-8305-f6c3f6d409d2",
		"publisherDisplayName": "Ionide",
		"publisherId": "6841d314-11e9-4ec1-a088-08558c6effee"
	}
}
